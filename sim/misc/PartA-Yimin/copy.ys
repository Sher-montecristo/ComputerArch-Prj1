# 518030910211 ZiqiZhao

# Set up stack
    .pos    0
    irmovl  stack, %esp
    rrmovl  %esp, %ebp
    irmovl  $3, %eax
    pushl   %eax
    irmovl  dest, %eax
    pushl   %eax
    irmovl  src, %eax
    pushl   %eax
    call    copy_block
    halt

.align 4
# Source block
src:
    .long 0x00a
    .long 0x0b0
    .long 0xc00

# Destination block
dest:
    .long 0x111
    .long 0x222
    .long 0x333

# sum_list func
copy_block:
    pushl   %ebp            # enter
    rrmovl  %esp, %ebp
    pushl   %ebx            # save %ebx
    pushl   %edi            # save %edi -> imm
    pushl   %esi            # save %esi -> val
    xorl    %eax, %eax      # result
    mrmovl  16(%ebp), %ebx   # len
    mrmovl  12(%ebp), %edx  # dest
    mrmovl  8(%ebp), %ecx  # src
loop:
    irmovl  $4, %edi
    mrmovl  (%ecx), %esi
    addl    %edi, %ecx
    rmmovl  %esi, (%edx)
    addl    %edi, %edx
    xorl    %esi, %eax
    irmovl  $-1, %edi
    addl    %edi, %ebx
test:
    andl    %ebx, %ebx
    jg     loop
return:
    popl    %esi
    popl    %edi
    popl    %ebx
    rrmovl  %ebp, %esp      # leave
    popl    %ebp
    ret


# Stack 
    .pos    0x400
stack:

