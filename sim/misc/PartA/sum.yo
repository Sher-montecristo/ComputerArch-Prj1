                      | # 518030910211 ZiqiZhao
                      | # 518030910188 YiminZhao
                      | 
  0x000:              |     .pos    0
  0x000:              | main:
  0x000: 30f400040000 |     irmovl  stack, %esp     # initialize stack
  0x006: 2045         |     rrmovl  %esp, %ebp      # initialize frame
  0x008: 30f018000000 |     irmovl  ele1, %eax
  0x00e: a00f         |     pushl   %eax            # argument
  0x010: 8030000000   |     call    sum_list
  0x015: 00           |     halt
                      | 
                      | # Sample linked list 
  0x018:              | .align 4
  0x018:              | ele1:
  0x018: 0c000000     |     .long   0x00c
  0x01c: 20000000     |     .long   ele2
  0x020:              | ele2:
  0x020: b0000000     |     .long   0x0b0
  0x024: 28000000     |     .long   ele3
  0x028:              | ele3:
  0x028: 000c0000     |     .long   0xc00
  0x02c: 00000000     |     .long   0
                      | 
                      | # sum_list func
  0x030:              | sum_list:
  0x030: a05f         |     pushl   %ebp            # enter
  0x032: 2045         |     rrmovl  %esp, %ebp
  0x034: 6300         |     xorl    %eax, %eax      # clear %eax
  0x036: 502508000000 |     mrmovl  8(%ebp), %edx   # get ls
  0x03c: 704f000000   |     jmp     test
  0x041:              | loop:
  0x041: 501200000000 |     mrmovl  (%edx), %ecx
  0x047: 6010         |     addl    %ecx, %eax
  0x049: 502204000000 |     mrmovl  4(%edx), %edx
  0x04f:              | test:
  0x04f: 6222         |     andl    %edx, %edx
  0x051: 7441000000   |     jne     loop            # %edx != 0
  0x056:              | return:
  0x056: 2054         |     rrmovl  %ebp, %esp      # leave
  0x058: b05f         |     popl    %ebp
  0x05a: 90           |     ret
                      | 
                      | 
                      | # Stack 
  0x400:              |     .pos    0x400
  0x400:              | stack:
                      | 
