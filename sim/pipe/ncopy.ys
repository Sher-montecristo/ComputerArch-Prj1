#/* $begin ncopy-ys */

# Bugen's note: to evalute this program, run:
#  > ./correctness.pl -p
#  > ./benchmark.pl

##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
# 518030910211, ZiqiZhao
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	xorl %eax,%eax		# count = 0;
	andl %edx,%edx		# len <= 0?
	jle Done		# if so, goto Done:

Loop:	mrmovl (%ebx), %esi	# read val from src...
	iaddl $-1, %edx		# len--
	iaddl $4, %ebx		# src++
	andl %esi, %esi		# val <= 0?
	rmmovl %esi, (%ecx)	# ...and store it to dst
	jle Npos		# if so, goto Npos:
	iaddl $1, %eax		# count++
Npos:
	iaddl $4, %ecx		# dst++
	andl %edx,%edx		# len > 0?
	jg Loop			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
